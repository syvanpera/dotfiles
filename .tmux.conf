# ████████╗███╗   ███╗██╗   ██╗██╗  ██╗
# ╚══██╔══╝████╗ ████║██║   ██║╚██╗██╔╝
#    ██║   ██╔████╔██║██║   ██║ ╚███╔╝
#    ██║   ██║╚██╔╝██║██║   ██║ ██╔██╗
#    ██║   ██║ ╚═╝ ██║╚██████╔╝██╔╝ ██╗
#    ╚═╝   ╚═╝     ╚═╝ ╚═════╝ ╚═╝  ╚═╝
# Terminal multiplexer
# https://github.com/tmux/tmux

set -gq allow-passthrough on     # pass through escape sequences to the terminal
set -g base-index 1              # start indexing windows at 1 instead of 0
set -g detach-on-destroy off     # don't exit from tmux when closing a session
set -g escape-time 0             # zero-out escape time delay
set -g history-limit 1000000     # significantly increase history size
set -g mouse on                  # enable mouse support
set -g renumber-windows on       # renumber all windows when any window is closed
set -g set-clipboard on          # use system clipboard
set -g status-interval 2         # update status every 2 seconds
set -g status-left-length 100    # increase status line length
set -g status-right-length 100   # increase status line length
set -g status-style 'bg=default' # transparent
set -g status-position bottom
set -g focus-events on
set -g set-titles on

setw -g mode-keys vi        # vi copypaste mode
setw -g automatic-rename on # rename window to reflect current program

set -ga update-environment TERM
set -ga update-environment TERM_PROGRAM

set-option -g default-terminal "tmux-256color"
set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m' # colored underscores
set -ag terminal-overrides ",xterm-kitty:Tc"

unbind M-v

# Set prefix to Ctrl-Space
unbind C-b
set -g prefix C-Space
bind Space send-prefix

bind Escape copy-mode
bind -Tcopy-mode-vi 'v' send -X begin-selection
bind -Tcopy-mode-vi 'y' send -X copy-pipe-and-cancel "wl-copy"
bind -Tcopy-mode-vi Escape send -X cancel
bind -Tcopy-mode-vi V send -X rectangle-toggle

bind C-l send-keys 'C-l'

bind -n C-M-h resize-pane -L 1
bind -n C-M-l resize-pane -R 1
bind -n C-M-j resize-pane -D 1
bind -n C-M-k resize-pane -U 1

bind -n M-Left resize-pane -L 1
bind -n M-S-Left resize-pane -L 5
bind -n M-Right resize-pane -R 1
bind -n M-S-Right resize-pane -R 5
bind -n M-Down resize-pane -D 1
bind -n M-S-Down resize-pane -D 5
bind -n M-Up resize-pane -U 1
bind -n M-S-Up resize-pane -U 5

# window navigation
bind h previous-window # select previous window
bind k previous-window # select previous window
bind l next-window     # select next window
bind j next-window     # select next window
bind Tab last-window   # move to last active window

# Move pane to new window
bind b break-pane

bind C-d detach     # the same as d so you don't have to depress Ctrl

bind | split-window -h -c "#{pane_current_path}"        # vertical split
bind - split-window -v -c "#{pane_current_path}"        # horizontal split
bind _ split-window -v -l 18 -c "#{pane_current_path}"  # vertical split with predefined size

bind u source-file ~/.tmux.conf \; display-message "Configuration reloaded."

# A few bindings for some commonly used programs
bind r new-window -n '󰙅 ' -c "#{pane_current_path}" yazi
bind g new-window -n ' ' -c "#{pane_current_path}" lazygit

# keep the same cwd when creating new windows
bind c new-window -c "#{pane_current_path}"

bind \` switch-client -t'{marked}'

# Smart pane switching with awareness of Vim splits.
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind -n 'C-h' if-shell "$is_vim" 'send-keys C-h' 'select-pane -L'
bind -n 'C-j' if-shell "$is_vim" 'send-keys C-j' 'select-pane -D'
bind -n 'C-k' if-shell "$is_vim" 'send-keys C-k' 'select-pane -U'
bind -n 'C-l' if-shell "$is_vim" 'send-keys C-l' 'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"
bind -n 'C-Space' if-shell "$is_vim" 'send-keys C-Space' 'select-pane -t:.+'

bind -T copy-mode-vi 'C-h' select-pane -L
bind -T copy-mode-vi 'C-j' select-pane -D
bind -T copy-mode-vi 'C-k' select-pane -U
bind -T copy-mode-vi 'C-l' select-pane -R
bind -T copy-mode-vi 'C-\' select-pane -l
bind -T copy-mode-vi 'C-Space' select-pane -t:.+

# Smart session switching
bind -n M-p run-shell "~/.local/bin/tms"

# Quick session switching
bind -n § switch-client -l\; refresh-client -S
bind -n M-n switch-client -l\; refresh-client -S

