# ████████╗███╗   ███╗██╗   ██╗██╗  ██╗
# ╚══██╔══╝████╗ ████║██║   ██║╚██╗██╔╝
#    ██║   ██╔████╔██║██║   ██║ ╚███╔╝
#    ██║   ██║╚██╔╝██║██║   ██║ ██╔██╗
#    ██║   ██║ ╚═╝ ██║╚██████╔╝██╔╝ ██╗
#    ╚═╝   ╚═╝     ╚═╝ ╚═════╝ ╚═╝  ╚═╝
# Terminal multiplexer
# https://github.com/tmux/tmux
# cSpell:words christoomey joshmedeski lazygit brightblack nobold gitmux

set -g base-index 1           # start indexing windows at 1 instead of 0
set -g detach-on-destroy off  # don't exit from tmux when closing a session
set -g escape-time 0          # zero-out escape time delay
set -g history-limit 1000000  # significantly increase history size
set -g mouse on               # enable mouse support
set -g renumber-windows on    # renumber all windows when any window is closed
set -g set-clipboard on       # use system clipboard
set -g status-interval 2      # update status every 2 seconds
set -g status-left-length 100  # increase status line length
set -g status-right-length 100 # increase status line length
set -g status-position bottom    # macOS / darwin style
#set -g allow-passthrough on

#set -ga update-environment TERM
#set -ga update-environment TERM_PROGRAM

# Vi copypaste mode
set-window-option -g mode-keys vi

# rename window to reflect current program
setw -g automatic-rename on

# set terminal title
set -g set-titles on
set -g set-titles-string '#h tmux - [#S] [#I #(/home/tuomo/.cargo/bin/despell -u #W) #W]'

set -g pane-active-border-style 'fg=color4,bg=default'
set -g pane-border-style 'fg=brightblack,bg=default'
set -g status-style 'bg=default' # transparent
set -g window-status-style 'bg=default'
# set -g window-status-separator ' #[fg=brightblack] '
set -g window-status-separator '  '
set -g window-status-format '#[fg=brightblack]#I #{?window_last_flag,,#{?window_zoomed_flag,󰊓,-}} #(/home/tuomo/.cargo/bin/despell -u #W) #W'
set -g window-status-current-format '#[fg=brightblue,bold]#{?window_zoomed_flag,#[fg=green],}#I #{?window_zoomed_flag,#[fg=green]󰊓,-} #(/home/tuomo/.cargo/bin/despell -c -u #W) #W#{?window_zoomed_flag,#[fg=green],}'
set -g mode-style bg=default,fg=yellow
set -g message-style bg=default,fg=yellow
set -g message-command-style bg=default,fg=yellow

# set -g status-left ' #[fg=blue,bold]#S #[fg=brightblack,nobold]󰇙 '
# set -g status-left '  #[fg=blue,bold]#S #[fg=brightblack,nobold] '
set -g status-left '#[fg=color6,bold]  #[fg=blue,bold]#S #[fg=brightblack,nobold] '
# set -g status-left '#($HOME/go/bin/gitmux -cfg $HOME/.tmux/gitmux.conf "#{pane_current_path}")'
# set -g status-right '#($HOME/go/bin/gitmux -cfg $HOME/.tmux/gitmux.conf "#{pane_current_path}")  #[fg=brightwhite,bold]%H:%M %a, %b %d  '
# set -g status-right '#(gitmux -cfg $HOME/.tmux/gitmux.conf "#{pane_current_path}")  #[fg=brightwhite,bold]%H:%M %a, %b %d'
set -g status-right '#[fg=brightwhite,bold]%H:%M'

set-option -g default-terminal 'screen-256color'
set-option -sa terminal-features ',xterm-kitty:RGB'

set-option -g focus-events on

# set-option -g default-terminal 'screen-256color'
# set-option -g terminal-overrides ',xterm-256color:RGB'

set -g default-command /usr/bin/fish
set -g default-shell /usr/bin/fish

# Key bindings --------------------------------------------------------------{{{

  unbind M-v
  
  # Set prefix to Ctrl-Space
  unbind C-b
  set -g prefix C-Space
  # set -g prefix C-a
  bind Space send-prefix
  
  bind Escape copy-mode
  bind -Tcopy-mode-vi 'v' send -X begin-selection
  bind -Tcopy-mode-vi 'y' send -X copy-pipe-and-cancel "wl-copy"
  bind -Tcopy-mode-vi Escape send -X cancel
  bind -Tcopy-mode-vi V send -X rectangle-toggle
  
  bind C-l send-keys 'C-l'
  
  bind -n C-M-h resize-pane -L 1
  bind -n C-M-l resize-pane -R 1
  bind -n C-M-j resize-pane -D 1
  bind -n C-M-k resize-pane -U 1

  bind -n M-Left resize-pane -L 1
  bind -n M-S-Left resize-pane -L 5
  bind -n M-Right resize-pane -R 1
  bind -n M-S-Right resize-pane -R 5
  bind -n M-Down resize-pane -D 1
  bind -n M-S-Down resize-pane -D 5
  bind -n M-Up resize-pane -U 1
  bind -n M-S-Up resize-pane -U 5
  
  # window navigation
  bind h previous-window # select previous window
  bind k previous-window # select previous window
  bind l next-window     # select next window
  bind j next-window     # select next window
  bind Tab last-window      # move to last active window
  # bind Tab switch-client -l\; refresh-client -S
  
  # Move pane to new window
  bind b break-pane
  
  bind C-d detach     # the same as d so you don't have to depress Ctrl
  
  bind | split-window -h -c "#{pane_current_path}"
  bind - split-window -v -c "#{pane_current_path}"
  
  # bind v new-window -n "sh -c '\${EDITOR:-nvim} ~/.tmux.conf && tmux source ~/.tmux.conf && tmux display \"Configuration reloaded.\"'"
  bind u source-file ~/.tmux.conf \; display-message "Configuration reloaded."
  
  # bind r new-window -n ' ' joshuto
  # bind r new-window -n '󰙅 ' -c "#{pane_current_path}" yazi
  # bind g new-window -n ' ' -c "#{pane_current_path}" lazygit
  bind r new-window -n 'yazi' -c "#{pane_current_path}" yazi
  bind g new-window -n 'git' -c "#{pane_current_path}" lazygit

  # keep the same cwd when creating new windows
  # bind c new-window -c "#{pane_current_path}"
  bind c new-window -c "~"

  # bind n display-popup -w 70% -h 60% -E "nvim +VimwikiIndex"
  
  bind _ split-window -v -l 15

  bind \` switch-client -t'{marked}'
  
  # Smart pane switching with awareness of Vim splits.
  # See: https://github.com/christoomey/vim-tmux-navigator
  is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
      | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
  # is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
  #     | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$|emacs'"
  bind -n 'C-h' if-shell "$is_vim" 'send-keys C-h' 'select-pane -L'
  bind -n 'C-j' if-shell "$is_vim" 'send-keys C-j' 'select-pane -D'
  bind -n 'C-k' if-shell "$is_vim" 'send-keys C-k' 'select-pane -U'
  bind -n 'C-l' if-shell "$is_vim" 'send-keys C-l' 'select-pane -R'
  tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
  if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
      "bind -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
  if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
      "bind -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"
  bind -n 'C-Space' if-shell "$is_vim" 'send-keys C-Space' 'select-pane -t:.+'
  
  bind -T copy-mode-vi 'C-h' select-pane -L
  bind -T copy-mode-vi 'C-j' select-pane -D
  bind -T copy-mode-vi 'C-k' select-pane -U
  bind -T copy-mode-vi 'C-l' select-pane -R
  bind -T copy-mode-vi 'C-\' select-pane -l
  bind -T copy-mode-vi 'C-Space' select-pane -t:.+
  
  bind -n M-p run-shell "~/.local/bin/tms"
  bind -n M-P run-shell "~/.local/bin/tms"
  # bind -n M-Tab last-window
  bind -n § switch-client -l\; refresh-client -S
  # bind -n M-Tab switch-client -l\; refresh-client -S
  bind -n M-n switch-client -l\; refresh-client -S

  set -g @tmux-nerd-font-window-name-shell-icon ""
  
# }}}

# Plugins -------------------------------------------------------------------{{{

  # set -g @plugin 'tmux-plugins/tpm'
  # set -g @plugin 'catppuccin/tmux'

#  set -g @plugin 'tmux-plugins/tpm'
#  set -g @plugin 'tmux-plugins/tmux-sensible'
#  set -g @plugin 'tmux-plugins/tmux-resurrect'
#  set -g @plugin 'joshmedeski/tmux-nerd-font-window-name'

#  set -g @plugin 'dracula/tmux'
#  set -g @plugin 'wfxr/tmux-fzf-url'

  # set -g @resurrect-processes 'k9s'

# }}}

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
#run -b '~/.tmux/plugins/tpm/tpm'
